apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: sabnzbd-config
  namespace: media
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: longhorn
  resources:
    requests:
      storage: 5Gi
---
apiVersion: v1
kind: Secret
metadata:
  name: sabnzbd-secrets
  namespace: media
type: Opaque
stringData:
  # Update these with your Usenet provider details
  NEWS_SERVER_HOST: "news.example.com"
  NEWS_SERVER_PORT: "563"
  NEWS_SERVER_USERNAME: "your-username"
  NEWS_SERVER_PASSWORD: "your-password"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sabnzbd
  namespace: media
  labels:
    app: sabnzbd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: sabnzbd
  template:
    metadata:
      labels:
        app: sabnzbd
    spec:
      containers:
      - name: sabnzbd
        image: lscr.io/linuxserver/sabnzbd:latest
        ports:
        - containerPort: 8080
        envFrom:
        - configMapRef:
            name: media-env
        env:
        - name: DOWNLOAD_DIR
          value: "/downloads/complete"
        - name: INCOMPLETE_DIR
          value: "/downloads/incomplete"
        volumeMounts:
        - name: config
          mountPath: /config
        - name: downloads
          mountPath: /downloads
        resources:
          limits:
            cpu: 2000m
            memory: 2Gi
          requests:
            cpu: 500m
            memory: 1Gi
        livenessProbe:
          httpGet:
            path: /
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 30
      volumes:
      - name: config
        persistentVolumeClaim:
          claimName: sabnzbd-config
      - name: downloads
        persistentVolumeClaim:
          claimName: downloads
---
apiVersion: v1
kind: Service
metadata:
  name: sabnzbd
  namespace: media
spec:
  selector:
    app: sabnzbd
  ports:
  - port: 8080
    targetPort: 8080
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: sabnzbd
  namespace: media
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    traefik.ingress.kubernetes.io/router.middlewares: kube-system-local-only@kubernetescrd
spec:
  ingressClassName: traefik
  tls:
  - hosts:
    - sabnzbd.mackie.house
    secretName: sabnzbd-tls
  rules:
  - host: sabnzbd.mackie.house
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: sabnzbd
            port:
              number: 8080